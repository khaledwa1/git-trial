
lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  00000244  000002b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000244  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000308  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000348  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014af  00000000  00000000  000003c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d5a  00000000  00000000  0000186f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005ad  00000000  00000000  000025c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000150  00000000  00000000  00002b78  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000654  00000000  00000000  00002cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007c3  00000000  00000000  0000331c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00003adf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 e4       	ldi	r30, 0x44	; 68
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 32       	cpi	r26, 0x20	; 32
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	8d d0       	rcall	.+282    	; 0x22a <main>
 110:	97 c0       	rjmp	.+302    	; 0x240 <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <LCD_Command>:
	LCD_Command (0x80);					/* Cursor 1st row 0th position */
}

void LCD_Home(void)			//LCD cursor home
{
	LCD_Command(1<<1);
 114:	98 b1       	in	r25, 0x08	; 8
 116:	9f 70       	andi	r25, 0x0F	; 15
 118:	28 2f       	mov	r18, r24
 11a:	20 7f       	andi	r18, 0xF0	; 240
 11c:	92 2b       	or	r25, r18
 11e:	98 b9       	out	0x08, r25	; 8
 120:	98 b1       	in	r25, 0x08	; 8
 122:	9e 7f       	andi	r25, 0xFE	; 254
 124:	98 b9       	out	0x08, r25	; 8
 126:	98 b1       	in	r25, 0x08	; 8
 128:	92 60       	ori	r25, 0x02	; 2
 12a:	98 b9       	out	0x08, r25	; 8
 12c:	00 00       	nop
 12e:	98 b1       	in	r25, 0x08	; 8
 130:	9d 7f       	andi	r25, 0xFD	; 253
 132:	98 b9       	out	0x08, r25	; 8
 134:	32 e4       	ldi	r19, 0x42	; 66
 136:	3a 95       	dec	r19
 138:	f1 f7       	brne	.-4      	; 0x136 <LCD_Command+0x22>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <LCD_Command+0x28>
 13c:	28 b1       	in	r18, 0x08	; 8
 13e:	30 e1       	ldi	r19, 0x10	; 16
 140:	83 9f       	mul	r24, r19
 142:	c0 01       	movw	r24, r0
 144:	11 24       	eor	r1, r1
 146:	92 2f       	mov	r25, r18
 148:	9f 70       	andi	r25, 0x0F	; 15
 14a:	89 2b       	or	r24, r25
 14c:	88 b9       	out	0x08, r24	; 8
 14e:	88 b1       	in	r24, 0x08	; 8
 150:	82 60       	ori	r24, 0x02	; 2
 152:	88 b9       	out	0x08, r24	; 8
 154:	00 00       	nop
 156:	88 b1       	in	r24, 0x08	; 8
 158:	8d 7f       	andi	r24, 0xFD	; 253
 15a:	88 b9       	out	0x08, r24	; 8
 15c:	83 ef       	ldi	r24, 0xF3	; 243
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <LCD_Command+0x4c>
 164:	00 c0       	rjmp	.+0      	; 0x166 <LCD_Command+0x52>
 166:	00 00       	nop
 168:	08 95       	ret

0000016a <LCD_Char>:
 16a:	98 b1       	in	r25, 0x08	; 8
 16c:	9f 70       	andi	r25, 0x0F	; 15
 16e:	28 2f       	mov	r18, r24
 170:	20 7f       	andi	r18, 0xF0	; 240
 172:	92 2b       	or	r25, r18
 174:	98 b9       	out	0x08, r25	; 8
 176:	98 b1       	in	r25, 0x08	; 8
 178:	91 60       	ori	r25, 0x01	; 1
 17a:	98 b9       	out	0x08, r25	; 8
 17c:	98 b1       	in	r25, 0x08	; 8
 17e:	92 60       	ori	r25, 0x02	; 2
 180:	98 b9       	out	0x08, r25	; 8
 182:	00 00       	nop
 184:	98 b1       	in	r25, 0x08	; 8
 186:	9d 7f       	andi	r25, 0xFD	; 253
 188:	98 b9       	out	0x08, r25	; 8
 18a:	32 e4       	ldi	r19, 0x42	; 66
 18c:	3a 95       	dec	r19
 18e:	f1 f7       	brne	.-4      	; 0x18c <LCD_Char+0x22>
 190:	00 c0       	rjmp	.+0      	; 0x192 <LCD_Char+0x28>
 192:	28 b1       	in	r18, 0x08	; 8
 194:	30 e1       	ldi	r19, 0x10	; 16
 196:	83 9f       	mul	r24, r19
 198:	c0 01       	movw	r24, r0
 19a:	11 24       	eor	r1, r1
 19c:	92 2f       	mov	r25, r18
 19e:	9f 70       	andi	r25, 0x0F	; 15
 1a0:	89 2b       	or	r24, r25
 1a2:	88 b9       	out	0x08, r24	; 8
 1a4:	88 b1       	in	r24, 0x08	; 8
 1a6:	82 60       	ori	r24, 0x02	; 2
 1a8:	88 b9       	out	0x08, r24	; 8
 1aa:	00 00       	nop
 1ac:	88 b1       	in	r24, 0x08	; 8
 1ae:	8d 7f       	andi	r24, 0xFD	; 253
 1b0:	88 b9       	out	0x08, r24	; 8
 1b2:	83 ef       	ldi	r24, 0xF3	; 243
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_Char+0x4c>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_Char+0x52>
 1bc:	00 00       	nop
 1be:	08 95       	ret

000001c0 <LCD_cursor_blink>:
 1c0:	8f e0       	ldi	r24, 0x0F	; 15
 1c2:	a8 cf       	rjmp	.-176    	; 0x114 <LCD_Command>
 1c4:	08 95       	ret

000001c6 <LCD_Init>:
 1c6:	8f ef       	ldi	r24, 0xFF	; 255
 1c8:	87 b9       	out	0x07, r24	; 7
 1ca:	87 e8       	ldi	r24, 0x87	; 135
 1cc:	93 e1       	ldi	r25, 0x13	; 19
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <LCD_Init+0x8>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <LCD_Init+0xe>
 1d4:	00 00       	nop
 1d6:	83 e3       	ldi	r24, 0x33	; 51
 1d8:	9d df       	rcall	.-198    	; 0x114 <LCD_Command>
 1da:	82 e3       	ldi	r24, 0x32	; 50
 1dc:	9b df       	rcall	.-202    	; 0x114 <LCD_Command>
 1de:	88 e2       	ldi	r24, 0x28	; 40
 1e0:	99 df       	rcall	.-206    	; 0x114 <LCD_Command>
 1e2:	8c e0       	ldi	r24, 0x0C	; 12
 1e4:	97 df       	rcall	.-210    	; 0x114 <LCD_Command>
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	95 df       	rcall	.-214    	; 0x114 <LCD_Command>
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	93 df       	rcall	.-218    	; 0x114 <LCD_Command>
 1ee:	83 ef       	ldi	r24, 0xF3	; 243
 1f0:	91 e0       	ldi	r25, 0x01	; 1
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCD_Init+0x2c>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LCD_Init+0x32>
 1f8:	00 00       	nop
 1fa:	80 e8       	ldi	r24, 0x80	; 128
 1fc:	8b cf       	rjmp	.-234    	; 0x114 <LCD_Command>
 1fe:	08 95       	ret

00000200 <LCD_String>:
 200:	0f 93       	push	r16
 202:	1f 93       	push	r17
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	8c 01       	movw	r16, r24
 20a:	c0 e0       	ldi	r28, 0x00	; 0
 20c:	d0 e0       	ldi	r29, 0x00	; 0
 20e:	02 c0       	rjmp	.+4      	; 0x214 <LCD_String+0x14>
 210:	ac df       	rcall	.-168    	; 0x16a <LCD_Char>
 212:	21 96       	adiw	r28, 0x01	; 1
 214:	f8 01       	movw	r30, r16
 216:	ec 0f       	add	r30, r28
 218:	fd 1f       	adc	r31, r29
 21a:	80 81       	ld	r24, Z
 21c:	81 11       	cpse	r24, r1
 21e:	f8 cf       	rjmp	.-16     	; 0x210 <LCD_String+0x10>
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	1f 91       	pop	r17
 226:	0f 91       	pop	r16
 228:	08 95       	ret

0000022a <main>:
}

int main()
{

	LCD_Init();							/* Initialization of LCD*/
 22a:	cd df       	rcall	.-102    	; 0x1c6 <LCD_Init>
	LCD_cursor_blink();
 22c:	c9 df       	rcall	.-110    	; 0x1c0 <LCD_cursor_blink>
 22e:	80 e0       	ldi	r24, 0x00	; 0
	LCD_String("EnthusiasticGeek");		/* Write string on 1st line of LCD*/
 230:	92 e0       	ldi	r25, 0x02	; 2
 232:	e6 df       	rcall	.-52     	; 0x200 <LCD_String>
	LCD_Command(0xc0);					/* Go to 2nd line*/
 234:	80 ec       	ldi	r24, 0xC0	; 192
 236:	6e df       	rcall	.-292    	; 0x114 <LCD_Command>
	LCD_String("trial Coding!");			/* Write string on 2nd line*/
 238:	81 e1       	ldi	r24, 0x11	; 17
 23a:	92 e0       	ldi	r25, 0x02	; 2
 23c:	e1 df       	rcall	.-62     	; 0x200 <LCD_String>
 23e:	ff cf       	rjmp	.-2      	; 0x23e <main+0x14>

00000240 <_exit>:
 240:	f8 94       	cli

00000242 <__stop_program>:
 242:	ff cf       	rjmp	.-2      	; 0x242 <__stop_program>
